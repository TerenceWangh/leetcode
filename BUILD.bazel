# Bazel Build for leetcode

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

config_setting(
  name = "windows",
  constraint_values = ["@bazel_tools//platforms:windows"],
)

cc_library(
  name = "leetcode-solution",
  srcs = glob(
    include = [
      "src/solutions/*.cc",
      "include/solution.h",
    ]
  ),
  hdrs = [
    "include/solution.h",
    "include/listnode.h",
  ],
  includes = [
    "include",
  ],
)

cc_library(
  name = "leetcode-challenge",
  srcs = glob(
    include = [
      "src/challenge/**/*.cc",
      "include/challenge/*.h",
    ],
    exclude = [
      "include/challenge/challenge.h"
    ],
  ),
  hdrs = glob(
    include = [
      "include/challenge/*.h",
      "include/listnode.h",
    ],
    exclude = [
      "include/challenge/challenge.h"
    ],
  ),
  includes = [
    "include",
    "include/challenge"
  ],
)

cc_library(
  name = "leetcode-support",
  srcs = [
    "src/support.cc",
    "include/support.h",
  ],
  hdrs = [
    "include/support.h",
    "include/listnode.h",
  ],
  includes = [
    "include",
  ],
)

cc_test(
  name = "leetcode-test",
  size = "small",
  srcs = glob(
    include = [
      "test/main/*.cc",
      "include/test.h",
  ]),
  copts = ["-Iexternal/gtest/include"],
  deps = [
    "@gtest//:gtest-lib",
    ":leetcode-support",
    ":leetcode-solution",
  ],
)

cc_test(
  name = "leetcode-challenge-test",
  size = "small",
  srcs = glob(
    include = [
      "test/challenge/**/*.cc",
      "include/challenge/*.h",
  ]),
  copts = ["-Iexternal/gtest/include"],
  deps = [
    "@gtest//:gtest-lib",
    ":leetcode-support",
    ":leetcode-challenge",
  ],
)
